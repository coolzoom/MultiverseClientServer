// Author: claforte@feelingsoftware.com
//

global proc int colladaTranslatorOpts ( string $parent,
									    string $action,
									    string $initialSettings,
									    string $resultCallback )
//
//	Description:
//		This script posts the Collada file translator options.
//		The optionsString is of the form:
//			varName1=value1;varName2=value2;...
//
//	Parameters:
//		$parent	- the elf parent layout for this options layout. It is
//					always a scrollLayout.
//		$action	- the action that is to be performed with this invokation
//					of this proc. Valid options are:
//						"query" - construct the options string and pass it
//									to the resultCallback.
//						"post"	- post all the elf controls.
//		$initialSettings - the current options string in effect at the
//						   time this script is invoked.
//		$resultCallback	-
//				This is the proc to be called with the result string. 
//				resultCallback ( string $optionsString )
//
//	Returns:
//		1 if successfull.
//		0 otherwise.
//
{
	int		$intVal;
	int		$bResult;
	string	$currentOptions;
	string	$optionList[];
	string	$optionBreakDown[];
	int		$index;

	if ($action == "post") 
	{
		setParent $parent;

		setUITemplate -pushTemplate DefaultTemplate;		

		formLayout -e -visible false optionsBoxForm;

		columnLayout -adj true;
			frameLayout
					-cll true 
					-cl false
					-bv true 
					-bs "etchedIn"
					-l "General Options" 
					colladaGeneralFrame;

				columnLayout -adj true colladaGeneralOptions;

					checkBoxGrp
							-l " "
							-ncb 1
							-v1 false
							-l1 "Bake transforms"
							colladaBakeTransforms;
							
					checkBoxGrp
							-l " "
							-ncb 1
							-v1 false
							-l1 "Bake lighting (Undo after export to remove baked lighting)"
							colladaBakeLighting;

					checkBoxGrp
							-l " "
							-ncb 1
							-v1 false
							-l1 "Export camera as lookat"
							colladaExportCameraAsLookat;
							
					checkBoxGrp
							-l " "
							-l1 "Export polygons as triangles"
							-v1 false
							colladaExportTriangles;
							
					text
							-l " "
							colladaSamplingSeparator;
							
					checkBoxGrp
							-l " "
							-ncb 1
							-v1 false
							-l1 "Sampling"
							-on1 "textFieldGrp -e -en true colladaSamplingFunction;"
							-of1 "textFieldGrp -e -en false colladaSamplingFunction;"
							colladaIsSampling;
					
					textFieldGrp
							-l "Sampling function"
							-en false
							-tx ""
							colladaSamplingFunction;
							
					text
							-l "Read the documentation to learn how to use the variable sampling function."
							colladaSamplingInformation;

				setParent ..; // columnLayout
			setParent ..; // frameLayout

			frameLayout 
					-cll true 
					-cl false 
					-bv true 
					-bs "etchedIn"
					-l "Experimental Features" 
					colladaExperimentalFrame;

				columnLayout -adj true colladaExperimentalOptions;

					checkBoxGrp
							-l " "
							-ncb 1
							-v1 false
							-l1 "Export physics (alpha)"
							colladaPhysicsEnable;

				setParent ..; // columnLayout
			setParent ..; // frameLayout

			frameLayout 
					-cll true 
					-cl false 
					-bv true 
					-bs "etchedIn"
					-l "Filter export" 
					colladaFilterFrame;

				columnLayout -adj true colladaFilterOptions;

					checkBoxGrp
							-l "Export:"
							-ncb 2
							-va2 true true
							-la2 "Polygon meshes" "Lights"
							colladaExportFilter1;

					checkBoxGrp
							-l " "
							-ncb 2
							-va2 true true
							-la2 "Cameras" "Joints and skin"
							colladaExportFilter2;
							
					checkBoxGrp
							-l " "
							-ncb 2
							-va2 true true
							-la2 "Animations" "Controller targets"
							colladaExportFilter3;
					
					checkBoxGrp
							-l " "
							-ncb 1
							-v1 false
							-l1 "Invisible Nodes (includes default cameras)"
							colladaExportFilter4;
					
					checkBoxGrp
							-l " "
							-ncb 1
							-v1 true
							-l1 "Bounding Boxes"
							colladaExportFilter4b;
					
					text
							-l " "
							colladaExportFilterSeparator1;

					checkBoxGrp
							-l " "
							-ncb 2
							-va2 true true
							-la2 "Normals" "Texture Coordinates"
							colladaExportFilter5;
					
					checkBoxGrp
							-l " "
							-ncb 1
							-v1 true
							-l1 "Per-Vertex Colors"
							colladaExportFilter6;

				setParent ..; // columnLayout
			setParent ..; // frameLayout

			frameLayout 
					-cll true 
					-cl true 
					-bv true 
					-bs "etchedIn"
					-l "Deprecated features (backward compatibility)" 
					colladaDeprecatedFrame;

				columnLayout -adj true colladaDeprecatedOptions;

					checkBoxGrp
						-l " "
						-v1 false 
						-l1 "Export weakly-typed arrays (1.2)"
						colladaWeaklyTypedArraysFlag;					

				setParent ..; // columnLayout				
			setParent ..; // frameLayout


		setParent ..; // columnLayout

		setParent ..; // formLayout (optionsBoxForm)
		
		// Now set to current settings.

		$currentOptions = $initialSettings;
		if (size($currentOptions) > 0) 
		{
			tokenize($currentOptions, ";", $optionList);
			for ($index = 0; $index < size($optionList); $index++) 
			{
				tokenize($optionList[$index], "=", $optionBreakDown);

//
// Domain selection options
//
				 if ( $optionBreakDown[0] == "bakeTransforms" )
				 {
					 $intVal = $optionBreakDown[1];
					 checkBoxGrp -e -v1 $intVal colladaBakeTransforms;
				 }
				 else if ( $optionBreakDown[0] == "bakeLighting" )
				 {
					$intVal = $optionBreakDown[1];
					checkBoxGrp -e -v1 $intVal colladaBakeLighting;
				 }
				 else if ( $optionBreakDown[0] == "exportCameraAsLookat" )
				 {
					 $intVal = $optionBreakDown[1];
					 checkBoxGrp -e -v1 $intVal colladaExportCameraAsLookat;
				 }
				 else if ( $optionBreakDown[0] == "exportTriangles" )
				 {
					$intVal = $optionBreakDown[1];
					checkBoxGrp -e -v1 $intVal colladaExportTriangles;
				 }
				 else if ( $optionBreakDown[0] == "isSampling" )
				 {
					 $intVal = $optionBreakDown[1];
					 checkBoxGrp -e -v1 $intVal colladaIsSampling;
					 textFieldGrp -e -en $intVal colladaSamplingFunction;
				 }
				 else if ( $optionBreakDown[0] == "samplingFunction" )
				 {
					 textFieldGrp -e -tx $optionBreakDown[1] colladaSamplingFunction;
				 }


// Set Animation sliders
//
				else
				 if ( $optionBreakDown[0] == "enablePhysics" )
				 {
					 $intVal = $optionBreakDown[1];
					 checkBoxGrp -e -v1 $intVal colladaPhysicsEnable;
				 }
				 
// Export filter
//
				else if ($optionBreakDown[0] == "exportPolygonMeshes")
				{
					 $intVal = $optionBreakDown[1];
					 checkBoxGrp -e -v1 $intVal colladaExportFilter1;
				}
				else if ($optionBreakDown[0] == "exportLights")
				{
					 $intVal = $optionBreakDown[1];
					 checkBoxGrp -e -v2 $intVal colladaExportFilter1;
				}
				else if ($optionBreakDown[0] == "exportCameras")
				{
					 $intVal = $optionBreakDown[1];
					 checkBoxGrp -e -v1 $intVal colladaExportFilter2;
				}
				else if ($optionBreakDown[0] == "exportJointsAndSkin")
				{
					 $intVal = $optionBreakDown[1];
					 checkBoxGrp -e -v2 $intVal colladaExportFilter2;
				}
				else if ($optionBreakDown[0] == "exportAnimations")
				{
					 $intVal = $optionBreakDown[1];
					 checkBoxGrp -e -v1 $intVal colladaExportFilter3;
				}
				else if ($optionBreakDown[0] == "exportControllerTargets")
				{
					 $intVal = $optionBreakDown[1];
					 checkBoxGrp -e -v2 $intVal colladaExportFilter3;
				}
				else if ($optionBreakDown[0] == "exportInvisibleNodes")
				{
					 $intVal = $optionBreakDown[1];
					 checkBoxGrp -e -v1 $intVal colladaExportFilter4;
				}
				else if ($optionBreakDown[0] == "exportBoundingBoxes")
				{
					 $intVal = $optionBreakDown[1];
					 checkBoxGrp -e -v1 $intVal colladaExportFilter4b;
				}
				else if ($optionBreakDown[0] == "exportNormals")
				{
					 $intVal = $optionBreakDown[1];
					 checkBoxGrp -e -v1 $intVal colladaExportFilter5;
				}
				else if ($optionBreakDown[0] == "exportTexCoords")
				{
					 $intVal = $optionBreakDown[1];
					 checkBoxGrp -e -v2 $intVal colladaExportFilter5;
				}
				else if ($optionBreakDown[0] == "exportVertexColors")
				{
					 $intVal = $optionBreakDown[1];
					 checkBoxGrp -e -v1 $intVal colladaExportFilter6;
				}

// Deprecated options
//
                else if ($optionBreakDown[0] == "exportWeaklyTypedArrays") 
                {
                    $intVal = $optionBreakDown[1];
					checkBoxGrp -e -v1 $intVal colladaWeaklyTypedArraysFlag; 
                } 
                 
			}
		}
		$bResult = 1;
		
		formLayout -e -visible true optionsBoxForm;

		setUITemplate -popTemplate;

	} else if ($action == "query") {

// Query general options
//
		$currentOptions = $currentOptions + "bakeTransforms=" + `checkBoxGrp -q -v1 colladaBakeTransforms` + ";";
		$currentOptions = $currentOptions + "bakeLighting=" + `checkBoxGrp -q -v1 colladaBakeLighting` + ";";
		$currentOptions = $currentOptions + "exportCameraAsLookat=" + `checkBoxGrp -q -v1 colladaExportCameraAsLookat` + ";";
		$currentOptions = $currentOptions + "exportTriangles=" + `checkBoxGrp -q -v1 colladaExportTriangles` + ";";
		$currentOptions = $currentOptions + "isSampling=" + `checkBoxGrp -q -v1 colladaIsSampling` + ";";
		$currentOptions = $currentOptions + "samplingFunction=" + `textFieldGrp -q -tx colladaSamplingFunction` + ";";

// Query experimental options
//
		$currentOptions = $currentOptions + "enablePhysics=" + `checkBoxGrp -q -v1 colladaPhysicsEnable` + ";";

// Query filter options
//
		$currentOptions = $currentOptions + "exportPolygonMeshes=" + `checkBoxGrp -q -v1 colladaExportFilter1` + ";";
		$currentOptions = $currentOptions + "exportLights=" + `checkBoxGrp -q -v2 colladaExportFilter1` + ";";
		$currentOptions = $currentOptions + "exportCameras=" + `checkBoxGrp -q -v1 colladaExportFilter2` + ";";
		$currentOptions = $currentOptions + "exportJointsAndSkin=" + `checkBoxGrp -q -v2 colladaExportFilter2` + ";";
		$currentOptions = $currentOptions + "exportAnimations=" + `checkBoxGrp -q -v1 colladaExportFilter3` + ";";
		$currentOptions = $currentOptions + "exportControllerTargets=" + `checkBoxGrp -q -v2 colladaExportFilter3` + ";";
		$currentOptions = $currentOptions + "exportInvisibleNodes=" + `checkBoxGrp -q -v1 colladaExportFilter4` + ";";
		$currentOptions = $currentOptions + "exportBoundingBoxes=" + `checkBoxGrp -q -v1 colladaExportFilter4b` + ";";
		$currentOptions = $currentOptions + "exportNormals=" + `checkBoxGrp -q -v1 colladaExportFilter5` + ";";
		$currentOptions = $currentOptions + "exportTexCoords=" + `checkBoxGrp -q -v2 colladaExportFilter5` + ";";
		$currentOptions = $currentOptions + "exportVertexColors=" + `checkBoxGrp -q -v1 colladaExportFilter6` + ";";

// Deprecated options
//
		$currentOptions = $currentOptions + "exportWeaklyTypedArrays=" + `checkBoxGrp -q -v1 colladaWeaklyTypedArraysFlag` + ";";

		print( "Options: " + $currentOptions + "\n" );

		eval($resultCallback+" \""+$currentOptions+"\"");

		$bResult = 1;
	} else {
		$bResult = 0;
	}
	
	return $bResult;
}

global proc
colladaBrowseForScript()
{
	string $file = `fileDialog`;
	textField -e -text $file colladaScript;
}
